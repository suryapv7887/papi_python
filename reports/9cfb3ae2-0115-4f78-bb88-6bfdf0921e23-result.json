{"name": "test_fill_new_employee_details", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00EDFC83+61635]\n\tGetHandleVerifier [0x00EDFCC4+61700]\n\t(No symbol) [0x00D005D3]\n\t(No symbol) [0x00D4899E]\n\t(No symbol) [0x00D48D3B]\n\t(No symbol) [0x00D90E12]\n\t(No symbol) [0x00D6D2E4]\n\t(No symbol) [0x00D8E61B]\n\t(No symbol) [0x00D6D096]\n\t(No symbol) [0x00D3C840]\n\t(No symbol) [0x00D3D6A4]\n\tGetHandleVerifier [0x011645A3+2701795]\n\tGetHandleVerifier [0x0115FD26+2683238]\n\tGetHandleVerifier [0x0117AA6E+2793134]\n\tGetHandleVerifier [0x00EF6945+155013]\n\tGetHandleVerifier [0x00EFD02D+181357]\n\tGetHandleVerifier [0x00EE74D8+92440]\n\tGetHandleVerifier [0x00EE7680+92864]\n\tGetHandleVerifier [0x00ED2070+5296]\n\tBaseThreadInitThunk [0x76325D49+25]\n\tRtlInitializeExceptionChain [0x77C3D03B+107]\n\tRtlGetAppContainerNamedObjectPath [0x77C3CFC1+561]", "trace": "self = <test_new_regular_employee.TestAddNewRegularEmployee object at 0x000001818C5D4C50>\nlogin_user = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"0167a0b3a544c9d2f76b5a85ee314083\")>\n\n    @pytest.fixture(autouse=True)\n    def setup_pages(self, login_user):\n        self.driver = login_user\n        self.dashboard_page = DashboardPage(self.driver)\n        self.employee_form_page = NEW_REGULAR_EMPLOYEE(self.driver)\n        self.employee_data = PeopleData.ADD_EMPLOYEE_DATA\n    \n        self.dashboard_page.click_regular_employees()\n>       self.employee_form_page.click_add_employee()\n\ntestcases\\test_new_regular_employee.py:20: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \npages\\new_regular_employee_page.py:17: in click_add_employee\n    element = self.helpers.wait_for_element(LOC.ADD_EMPLOYEE_BUTTON, condition=\"clickable\")\nutils\\helpers.py:19: in wait_for_element\n    return self.wait.until(EC.element_to_be_clickable(locator))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"0167a0b3a544c9d2f76b5a85ee314083\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001818C669080>, message = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            if time.monotonic() > end_time:\n                break\n            time.sleep(self._poll)\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00EDFC83+61635]\nE       \tGetHandleVerifier [0x00EDFCC4+61700]\nE       \t(No symbol) [0x00D005D3]\nE       \t(No symbol) [0x00D4899E]\nE       \t(No symbol) [0x00D48D3B]\nE       \t(No symbol) [0x00D90E12]\nE       \t(No symbol) [0x00D6D2E4]\nE       \t(No symbol) [0x00D8E61B]\nE       \t(No symbol) [0x00D6D096]\nE       \t(No symbol) [0x00D3C840]\nE       \t(No symbol) [0x00D3D6A4]\nE       \tGetHandleVerifier [0x011645A3+2701795]\nE       \tGetHandleVerifier [0x0115FD26+2683238]\nE       \tGetHandleVerifier [0x0117AA6E+2793134]\nE       \tGetHandleVerifier [0x00EF6945+155013]\nE       \tGetHandleVerifier [0x00EFD02D+181357]\nE       \tGetHandleVerifier [0x00EE74D8+92440]\nE       \tGetHandleVerifier [0x00EE7680+92864]\nE       \tGetHandleVerifier [0x00ED2070+5296]\nE       \tBaseThreadInitThunk [0x76325D49+25]\nE       \tRtlInitializeExceptionChain [0x77C3D03B+107]\nE       \tRtlGetAppContainerNamedObjectPath [0x77C3CFC1+561]\n\nC:\\Users\\Sinergia\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "attachments": [{"name": "stdout", "source": "0e2027f0-a2e6-43fd-9c2f-7992377a8ad3-attachment.txt", "type": "text/plain"}], "start": 1747819277046, "stop": 1747819277046, "uuid": "87429203-656c-4a70-9ea2-9647fdb4c6e6", "historyId": "5e2347ee3e5a849c06c19e75d37e97b2", "testCaseId": "5e2347ee3e5a849c06c19e75d37e97b2", "fullName": "testcases.test_new_regular_employee.TestAddNewRegularEmployee#test_fill_new_employee_details", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('login_user')"}, {"name": "parentSuite", "value": "testcases"}, {"name": "suite", "value": "test_new_regular_employee"}, {"name": "subSuite", "value": "TestAddNewRegularEmployee"}, {"name": "host", "value": "DESKTOP-LIFTNJ8"}, {"name": "thread", "value": "21108-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcases.test_new_regular_employee"}]}